{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { useAuthContext } from \"./useAuthContext\";\n// import axios from \"axios\";\n\n// export const useRegister = () => {\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(null);\n//   const { dispatch } = useAuthContext();\n\n//   const register = async (email, password) => {\n//     setLoading(true);\n//     setError(null);\n\n//     try {\n//       const res = await axios.post(\n//         \"https://gym-blog-3.onrender.com/api/users/register\",\n//         {\n//           email,\n//           password,\n//         }\n//       );\n//       if (res.status === 200) {\n//         const { email, token } = res.data;\n//         localStorage.setItem(\"user\", JSON.stringify({ email, token }));\n//         dispatch({ state: \"LOGIN\", payload: { email, token } });\n//         setLoading(false);\n//       }\n//     } catch (err) {\n//       if (err.response) {\n//         setError(err.response.data || \"Server error occurred\");\n//       } else if (err.request) {\n//         setError(\"No response from the error\");\n//       } else {\n//         setError(\"Error occured during registeration\");\n//       }\n//       setLoading(false);\n//     }\n//   };\n//   return { register, error, loading };\n// };\n\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nimport axios from \"axios\";\nexport const useRegister = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false); // Initialize to false\n  const {\n    dispatch\n  } = useAuthContext();\n  const register = async (email, password) => {\n    setLoading(true);\n    setError(null); // Reset error on new request\n\n    try {\n      const res = await axios.post(\"https://gym-blog-3.onrender.com/api/users/register\", {\n        email,\n        password\n      });\n      if (res.status === 200) {\n        const {\n          email,\n          token\n        } = res.data;\n        localStorage.setItem(\"user\", JSON.stringify({\n          email,\n          token\n        }));\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            email,\n            token\n          }\n        });\n      }\n    } catch (err) {\n      // More descriptive error handling\n      if (err.response) {\n        setError(err.response.data.message || \"Server error occurred\"); // Access message if available\n      } else if (err.request) {\n        setError(\"No response from the server. Please try again.\");\n      } else {\n        setError(\"An error occurred during registration.\");\n      }\n    } finally {\n      setLoading(false); // Ensure loading state is reset\n    }\n  };\n  return {\n    register,\n    error,\n    loading\n  };\n};\n_s(useRegister, \"0TamFUJHy6t1ZdkVuypv+13Jt3s=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","axios","useRegister","_s","error","setError","loading","setLoading","dispatch","register","email","password","res","post","status","token","data","localStorage","setItem","JSON","stringify","type","payload","err","response","message","request"],"sources":["/Users/himanshuchauhan/Gym_growth/client/src/hooks/userRegister.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { useAuthContext } from \"./useAuthContext\";\n// import axios from \"axios\";\n\n// export const useRegister = () => {\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(null);\n//   const { dispatch } = useAuthContext();\n\n//   const register = async (email, password) => {\n//     setLoading(true);\n//     setError(null);\n\n//     try {\n//       const res = await axios.post(\n//         \"https://gym-blog-3.onrender.com/api/users/register\",\n//         {\n//           email,\n//           password,\n//         }\n//       );\n//       if (res.status === 200) {\n//         const { email, token } = res.data;\n//         localStorage.setItem(\"user\", JSON.stringify({ email, token }));\n//         dispatch({ state: \"LOGIN\", payload: { email, token } });\n//         setLoading(false);\n//       }\n//     } catch (err) {\n//       if (err.response) {\n//         setError(err.response.data || \"Server error occurred\");\n//       } else if (err.request) {\n//         setError(\"No response from the error\");\n//       } else {\n//         setError(\"Error occured during registeration\");\n//       }\n//       setLoading(false);\n//     }\n//   };\n//   return { register, error, loading };\n// };\n\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nimport axios from \"axios\";\n\nexport const useRegister = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false); // Initialize to false\n  const { dispatch } = useAuthContext();\n\n  const register = async (email, password) => {\n    setLoading(true);\n    setError(null); // Reset error on new request\n\n    try {\n      const res = await axios.post(\n        \"https://gym-blog-3.onrender.com/api/users/register\",\n        { email, password }\n      );\n\n      if (res.status === 200) {\n        const { email, token } = res.data;\n        localStorage.setItem(\"user\", JSON.stringify({ email, token }));\n        dispatch({ type: \"LOGIN\", payload: { email, token } });\n      }\n    } catch (err) {\n      // More descriptive error handling\n      if (err.response) {\n        setError(err.response.data.message || \"Server error occurred\"); // Access message if available\n      } else if (err.request) {\n        setError(\"No response from the server. Please try again.\");\n      } else {\n        setError(\"An error occurred during registration.\");\n      }\n    } finally {\n      setLoading(false); // Ensure loading state is reset\n    }\n  };\n\n  return { register, error, loading };\n};\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM;IAAES;EAAS,CAAC,GAAGR,cAAc,CAAC,CAAC;EAErC,MAAMS,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC1CJ,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB,IAAI;MACF,MAAMO,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC1B,oDAAoD,EACpD;QAAEH,KAAK;QAAEC;MAAS,CACpB,CAAC;MAED,IAAIC,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;QACtB,MAAM;UAAEJ,KAAK;UAAEK;QAAM,CAAC,GAAGH,GAAG,CAACI,IAAI;QACjCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,KAAK;UAAEK;QAAM,CAAC,CAAC,CAAC;QAC9DP,QAAQ,CAAC;UAAEa,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAE;YAAEZ,KAAK;YAAEK;UAAM;QAAE,CAAC,CAAC;MACxD;IACF,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZ;MACA,IAAIA,GAAG,CAACC,QAAQ,EAAE;QAChBnB,QAAQ,CAACkB,GAAG,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,IAAI,uBAAuB,CAAC,CAAC,CAAC;MAClE,CAAC,MAAM,IAAIF,GAAG,CAACG,OAAO,EAAE;QACtBrB,QAAQ,CAAC,gDAAgD,CAAC;MAC5D,CAAC,MAAM;QACLA,QAAQ,CAAC,wCAAwC,CAAC;MACpD;IACF,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,QAAQ;IAAEL,KAAK;IAAEE;EAAQ,CAAC;AACrC,CAAC;AAACH,EAAA,CAnCWD,WAAW;EAAA,QAGDF,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}