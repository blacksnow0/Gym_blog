{"ast":null,"code":"var _jsxFileName = \"/Users/himanshuchauhan/Gym_growth/client/src/components/Loader.js\",\n  _s = $RefreshSig$();\nimport { useLoadingContext } from \"../context/loadingContext\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/Loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loader = () => {\n  _s();\n  const {\n    loading\n  } = useLoadingContext();\n  const [dots, setDots] = useState(\"\");\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDots(prev => {\n        // Add a dot, and reset if it reaches 3 dots\n        return prev.length < 3 ? prev + \".\" : \"\";\n      });\n    }, 500); // Change the interval as needed (500 ms for this example)\n\n    return () => clearInterval(intervalId); // Clean up the interval on component unmount\n  }, [loading]);\n  return loading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(Loader, \"L+TdKDsbiqQLgzTmgdfWExsONlM=\", false, function () {\n  return [useLoadingContext];\n});\n_c = Loader;\nexport default Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["useLoadingContext","useState","useEffect","jsxDEV","_jsxDEV","Loader","_s","loading","dots","setDots","intervalId","setInterval","prev","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/himanshuchauhan/Gym_growth/client/src/components/Loader.js"],"sourcesContent":["import { useLoadingContext } from \"../context/loadingContext\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/Loader.css\";\n\nconst Loader = () => {\n  const { loading } = useLoadingContext();\n  const [dots, setDots] = useState(\"\");\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDots((prev) => {\n        // Add a dot, and reset if it reaches 3 dots\n        return prev.length < 3 ? prev + \".\" : \"\";\n      });\n    }, 500); // Change the interval as needed (500 ms for this example)\n\n    return () => clearInterval(intervalId); // Clean up the interval on component unmount\n  }, [loading]);\n  return (\n    loading && (\n      <div className=\"loading-screen\">\n        <div className=\"loader\"></div>\n      </div>\n    )\n  );\n};\n\nexport default Loader;\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,2BAA2B;AAC7D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,iBAAiB,CAAC,CAAC;EACvC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,OAAO,CAAEG,IAAI,IAAK;QAChB;QACA,OAAOA,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGD,IAAI,GAAG,GAAG,GAAG,EAAE;MAC1C,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAME,aAAa,CAACJ,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EACb,OACEA,OAAO,iBACLH,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BZ,OAAA;MAAKW,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CACN;AAEL,CAAC;AAACd,EAAA,CArBID,MAAM;EAAA,QACUL,iBAAiB;AAAA;AAAAqB,EAAA,GADjChB,MAAM;AAuBZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}