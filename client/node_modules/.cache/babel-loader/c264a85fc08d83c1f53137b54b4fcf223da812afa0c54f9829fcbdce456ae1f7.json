{"ast":null,"code":"var _jsxFileName = \"/Users/himanshuchauhan/Gym_growth/client/src/components/UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../utils/axios\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { WorkoutDetails } from \"../components/WorkoutDetails\";\nimport { useLoadingContext } from \"../context/loadingContext\";\nimport UserGrid from \"./UserGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext(); // Get the logged-in user\n  const [workouts, setWorkouts] = useState([]); // State for storing user-specific workouts\n  const {\n    setLoading\n  } = useLoadingContext();\n  useEffect(() => {\n    const fetchUserWorkouts = async () => {\n      if (!user) return; // Ensure user is logged in\n      setLoading(true);\n      try {\n        const response = await api.get(\"/workouts/userWorkouts\" // Your new API for fetching user-specific workouts\n        );\n        setWorkouts(response.data); // Set the fetched workouts to the state\n      } catch (err) {\n        console.error(\"Failed to fetch user workouts:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserWorkouts(); // Call the function when the component mounts\n  }, [user, setLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Workouts....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workouts\",\n      children: workouts.length > 0 ? workouts.map(workout => /*#__PURE__*/_jsxDEV(WorkoutDetails, {\n        workout: workout\n      }, workout._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No workouts found for your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserGrid, {\n        workouts: workouts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"QCH63MxjWSgFTAH2Fzacp+lVHRY=\", false, function () {\n  return [useAuthContext, useLoadingContext];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","useAuthContext","WorkoutDetails","useLoadingContext","UserGrid","jsxDEV","_jsxDEV","UserDashboard","_s","user","workouts","setWorkouts","setLoading","fetchUserWorkouts","response","get","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","workout","_id","_c","$RefreshReg$"],"sources":["/Users/himanshuchauhan/Gym_growth/client/src/components/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../utils/axios\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { WorkoutDetails } from \"../components/WorkoutDetails\";\nimport { useLoadingContext } from \"../context/loadingContext\";\nimport UserGrid from \"./UserGrid\";\n\nconst UserDashboard = () => {\n  const { user } = useAuthContext(); // Get the logged-in user\n  const [workouts, setWorkouts] = useState([]); // State for storing user-specific workouts\n  const { setLoading } = useLoadingContext();\n\n  useEffect(() => {\n    const fetchUserWorkouts = async () => {\n      if (!user) return; // Ensure user is logged in\n      setLoading(true);\n      try {\n        const response = await api.get(\n          \"/workouts/userWorkouts\" // Your new API for fetching user-specific workouts\n        );\n        setWorkouts(response.data); // Set the fetched workouts to the state\n      } catch (err) {\n        console.error(\"Failed to fetch user workouts:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserWorkouts(); // Call the function when the component mounts\n  }, [user, setLoading]);\n\n  return (\n    <div className=\"user-dashboard\">\n      <h2>Your Workouts....</h2>\n      <div className=\"workouts\">\n        {workouts.length > 0 ? (\n          workouts.map((workout) => (\n            <WorkoutDetails key={workout._id} workout={workout} />\n          ))\n        ) : (\n          <p>No workouts found for your account.</p>\n        )}\n      </div>\n      <div>\n        <UserGrid workouts={workouts} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,gBAAgB;AAChC,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAGR,cAAc,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM;IAAEa;EAAW,CAAC,GAAGT,iBAAiB,CAAC,CAAC;EAE1CL,SAAS,CAAC,MAAM;IACd,MAAMe,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACJ,IAAI,EAAE,OAAO,CAAC;MACnBG,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAC5B,wBAAwB,CAAC;QAC3B,CAAC;QACDJ,WAAW,CAACG,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;MACtD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACJ,IAAI,EAAEG,UAAU,CAAC,CAAC;EAEtB,oBACEN,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAKc,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBX,QAAQ,CAACgB,MAAM,GAAG,CAAC,GAClBhB,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBACnBtB,OAAA,CAACJ,cAAc;QAAmB0B,OAAO,EAAEA;MAAQ,GAA9BA,OAAO,CAACC,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACtD,CAAC,gBAEFnB,OAAA;QAAAe,QAAA,EAAG;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNnB,OAAA;MAAAe,QAAA,eACEf,OAAA,CAACF,QAAQ;QAACM,QAAQ,EAAEA;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzCID,aAAa;EAAA,QACAN,cAAc,EAERE,iBAAiB;AAAA;AAAA2B,EAAA,GAHpCvB,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}